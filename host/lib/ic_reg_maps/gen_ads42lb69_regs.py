#!/usr/bin/env python3
#
# SPDX-License-Identifier: GPL-3.0-or-later
#

########################################################################
# Template for raw text data describing registers
# name addr[bit range inclusive] default optional enums
########################################################################
REGS_TMPL="""\
########################################################################
## address 6
########################################################################
default_in_reg6      6[7]    1
clock_div                   6[0:1]     0      
########################################################################
## address 7
########################################################################
syncin_delay                   7[0:2]     0
########################################################################
## address 8
########################################################################
pdn_chx                     8[6:7]     0
stdby                           8[5]  0
data_format             8[4]  0
dis_ctl_pins              8[3] 0
test_ptn_align         8[2] 0
reset                             8[0] 0
########################################################################
## address 11
########################################################################
cha_gain_a                     11[3:7]     0
cha_enable                     11[2]  0
flip_data                           11[0] 0
########################################################################
## address 12
########################################################################
cha_gain_b                     12[3:7]     0
chb_enable                     12[2]  0
ovr_on_lsb                      12[0:1] 0
########################################################################
## address 13
########################################################################
default_in_reg13_1          13[5:6] 1
default_in_reg13_2          13[2:3] 1
fast_over_on_pin         13[0] 0
########################################################################
## address 15
########################################################################
cha_test_patern         15[4:7] 0
chb_test_patern         15[0:3] 0
########################################################################
## address 16
########################################################################
customer_patern_h         16[0:7]   0
########################################################################
## address 17
########################################################################
customer_patern_l            17[0:7]   0
########################################################################
## address 20
########################################################################
lvsd_clk_strength               20[3]   0
lvsd_data_strength            20[2]   0
disable_cha                           20[1]   0
disable_chb                           20[0]   0
########################################################################
## address 21
########################################################################
ddr_qdr                                   21[0]   0   
########################################################################
## address 22
########################################################################
ddr_output_timing            22[1:5]   0   
########################################################################
## address 23
########################################################################
lvds_clk_strength_enable            23[7]   0   
qdr_output_timing_cha               23[1:5]   0   
invert_clk_out_cha                         23[0]   0   
########################################################################
## address 24
########################################################################
qdr_output_timing_chb               24[1:5]   0   
invert_clk_out_chb                         24[0]   0   
########################################################################
## address 31
########################################################################
fast_ovr_threshold                         31[0:6]   0   
########################################################################
## address 32
########################################################################
pdn_ovr_for_pin_ctrl                         32[0]   0   
"""

########################################################################
# Template for methods in the body of the struct
########################################################################
BODY_TMPL="""\
uint8_t get_reg(uint8_t addr){
    uint8_t reg = 0;
    switch(addr){
    % for addr in sorted(set(map(lambda r: r.get_addr(), regs))):
    case ${addr}:
        % for reg in filter(lambda r: r.get_addr() == addr, regs):
        reg |= (uint8_t(${reg.get_name()}) & ${reg.get_mask()}) << ${reg.get_shift()};
        % endfor
        break;
    % endfor
    }
    return reg;
}

uint16_t get_write_reg(uint8_t addr){
    return (uint16_t(addr) << 8) | get_reg(addr);
}

uint16_t get_read_reg(uint8_t addr){
    return (uint16_t(addr) << 8) | (1 << 7);
}
"""

if __name__ == '__main__':
    import common; common.generate(
        name='ads42lb69_regs',
        regs_tmpl=REGS_TMPL,
        body_tmpl=BODY_TMPL,
        file=__file__,
    )
